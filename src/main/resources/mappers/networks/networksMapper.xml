<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.web.netedit.networks">

    <select id="connectionTest" resultType="HashMap">

        SELECT *
        FROM CONNECTION_TEST

    </select>

    <select id="getLink" resultType="HashMap">
        SELECT
            LINK_ID
            , UP_FROM_NODE
            , UP_TO_NODE
            , DOWN_FROM_NODE
            , DOWN_TO_NODE
            , EIDT_TY
            , WKT
            , USER_1
            , USER_2
            , USER_3
            , USER_4
            , LEFT_TURN_UP_DOWN
            , EDIT_YN
            , ROAD_RANK
            , FACILITY_KIND
            , NAVI_LV
            , KOTI_LV
            , LEN
            , ST_DIR
            , ED_DIR
            , LINK_CATEGORY
            , ONEWAY
            , WDTH
            , LANES
            , TOLL_NAME
            , ROAD_FACILITY_NAME
            , ROAD_NO
            , HOV_BUSLANE
            , SHOV_BUSLANE
            , AUTOEXCUSIVE
            , NUM_CROSS
            , BARRIER
            , MAXSPEED
            , TL_DENSITY
            , TRAF_ID_P
            , TRAF_ID_N
        FROM NETEDIT_MS_LINK_2020
    </select>

    <select id="getLinkByZone" parameterType="HashMap" resultType="HashMap">

        SELECT
        	LINK_ID
        	, UP_FROM_NODE
        	, UP_TO_NODE
        	, UP_LANES
        	, DOWN_FROM_NODE
        	, DOWN_TO_NODE
        	, DOWN_LANES
        	, ROAD_NAME
            , EDIT_TY
        	, FIRST_DO
        	, FIRST_GU
        	, LANE_CHANGE
        	, EX_POCKET_NUM
            , WKT
            , USE_YN
            , USER_1
            , USER_2
            , USER_3
            , USER_4
            , LEFT_TURN_UP_DOWN
            , EDIT_YN
            , ROAD_RANK
            , FACILITY_KIND
        , NAVI_LV
        , KOTI_LV
        , LEN
        , ST_DIR
        , ED_DIR
        , LINK_CATEGORY
        , ONEWAY
        , WDTH
        , LANES
        , TOLL_NAME
        , ROAD_FACILITY_NAME
        , ROAD_NO
        , HOV_BUSLANE
        , SHOV_BUSLANE
        , AUTOEXCUSIVE
        , NUM_CROSS
        , BARRIER
        , MAXSPEED
        , TL_DENSITY
        , TRAF_ID_P
        , TRAF_ID_N
        FROM NETEDIT_MS_LINK_2020
        WHERE 1=1
        <choose>
            <when test="SGG_CODE !=null and SGG_CODE.size != 0">
                AND FIRST_GU IN
                <foreach item="item" index="index" collection="SGG_CODE"
                      open="(" separator="," close=")">
                        #{item}
                </foreach>
            </when>
            <otherwise>
                AND ST_Intersects(
                                ST_GeometryFromText(#{WKT}),
                                GEOM
                            )
            </otherwise>
        </choose>

    </select>

    <select id="getFacilityByZone" parameterType="HashMap" resultType="HashMap">

        SELECT
        	FAC_ID
            , FAC_TY
            , WKT
            , USE_YN
            , EDIT_YN
        FROM NETEDIT_MS_FACILITY_2020
        WHERE 1=1

    </select>

    <select id="getNodeByZone" parameterType="HashMap" resultType="HashMap">

        SELECT NODE_ID, NODE_TYPE, TRAFFIC_LIGHT, NODE_NAME, DISTRICT_ID, DISTRICT_ID2, WKT, USE_YN, EDIT_YN
        FROM NETEDIT_MS_NODE_2020
        WHERE NODE_ID IN
        (
            SELECT
                UP_FROM_NODE
            FROM NETEDIT_MS_LINK_2020
            WHERE 1=1
            <choose>
                <when test="SGG_CODE !=null and SGG_CODE.size != 0">
                    AND FIRST_GU IN
                    <foreach item="item" index="index" collection="SGG_CODE"
                          open="(" separator="," close=")">
                            #{item}
                    </foreach>
                </when>
                    <otherwise>
                        AND ST_Intersects(
                                        ST_GeometryFromText(#{WKT}),
                                        GEOM
                                    )
                    </otherwise>
                </choose>

            UNION ALL

            SELECT
                UP_TO_NODE
            FROM NETEDIT_MS_LINK_2020
            WHERE 1=1
            <choose>
                <when test="SGG_CODE !=null and SGG_CODE.size != 0">
                    AND FIRST_GU IN
                    <foreach item="item" index="index" collection="SGG_CODE"
                          open="(" separator="," close=")">
                            #{item}
                    </foreach>
                </when>
                    <otherwise>
                        AND ST_Intersects(
                                        ST_GeometryFromText(#{WKT}),
                                        GEOM
                                    )
                    </otherwise>
                </choose>
        )
    </select>

    <select id="getNode" resultType="HashMap">

        SELECT 'FROM' AS DATA_TYPE, NODE_ID, NODE_TYPE, TRAFFIC_LIGHT, NODE_NAME, DISTRICT_ID, DISTRICT_ID2, WKT, USE_YN, EDIT_YN
        FROM NETEDIT_MS_NODE_2020
        WHERE NODE_ID = #{FROM_NODE}

        UNION ALL

        SELECT 'TO' AS DATA_TYPE, NODE_ID, NODE_TYPE, TRAFFIC_LIGHT, NODE_NAME, DISTRICT_ID, DISTRICT_ID2, WKT, USE_YN, EDIT_YN
        FROM NETEDIT_MS_NODE_2020
        WHERE NODE_ID = #{TO_NODE}

    </select>

    <select id="getTurn" resultType="HashMap">
        SELECT
            MAP_ID
            , NODE_ID
            , WKT
        FROM NETEDIT_MS_TURN_2020

    </select>

    <select id="getRcline" resultType="HashMap">
        SELECT UFID, WKT
        FROM NETEDIT_MS_RCLINE
        WHERE 1=1
        AND ST_Intersects(
                        ST_GeometryFromText(#{WKT}),
                        GEOM
                    )
    </select>

    <select id="getSingleLink" resultType="HashMap" parameterType="HashMap">
        SELECT
            LINK_ID
            , UP_FROM_NODE
            , UP_TO_NODE
            , UP_LANES
            , DOWN_FROM_NODE
            , DOWN_TO_NODE
            , DOWN_LANES
            , ROAD_NAME
            , EDIT_TY
            , FIRST_DO
            , FIRST_GU
            , LANE_CHANGE
            , EX_POCKET_NUM
            , WKT
            , USE_YN
            , USER_1
            , USER_2
            , USER_3
            , USER_4
            , LEFT_TURN_UP_DOWN
            , EDIT_YN
            , ROAD_RANK
            , FACILITY_KIND
            , NAVI_LV
            , KOTI_LV
            , LEN
            , ST_DIR
            , ED_DIR
            , LINK_CATEGORY
            , ONEWAY
            , WDTH
            , LANES
            , TOLL_NAME
            , ROAD_FACILITY_NAME
            , ROAD_NO
            , HOV_BUSLANE
            , SHOV_BUSLANE
            , AUTOEXCUSIVE
            , NUM_CROSS
            , BARRIER
            , MAXSPEED
            , TL_DENSITY
            , TRAF_ID_P
            , TRAF_ID_N
        FROM NETEDIT_MS_LINK_2020
        WHERE LINK_ID = #{FEATURE_ID}
    </select>

    <select id="getSmInter" parameterType="HashMap" resultType="HashMap">
        SELECT COMMNT, WKT
        FROM NETEDIT_MS_SM_INTER
    </select>

    <update id="updateLinkGeometry">
        UPDATE NETEDIT_MS_LINK_2020
        SET GEOM = ST_GEOMETRYFROMTEXT(WKT)
        WHERE (ST_EQUALS(GEOM,ST_GEOMETRYFROMTEXT(WKT)) = FALSE OR GEOM IS NULL)
    </update>

    <update id="updateNodeGeometry">
        UPDATE NETEDIT_MS_NODE_2020
        SET GEOM = ST_GEOMETRYFROMTEXT(WKT)
        WHERE (ST_EQUALS(GEOM,ST_GEOMETRYFROMTEXT(WKT)) = FALSE OR GEOM IS NULL)
    </update>

    <update id="updateFacGeometry">
        UPDATE NETEDIT_MS_FACILITY_2020
        SET GEOM = ST_GEOMETRYFROMTEXT(WKT)
        WHERE (ST_EQUALS(GEOM,ST_GEOMETRYFROMTEXT(WKT)) = FALSE OR GEOM IS NULL)
    </update>

</mapper>
