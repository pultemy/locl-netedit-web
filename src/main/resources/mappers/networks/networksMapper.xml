<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.web.netedit.networks">

    <select id="connectionTest" resultType="HashMap">
        SELECT *
        FROM CONNECTION_TEST
    </select>

    <select id="getLink" resultType="HashMap">
        SELECT
            LINK_ID
            , UP_FROM_NODE
            , UP_TO_NODE
            , DOWN_FROM_NODE
            , DOWN_TO_NODE
            , EDIT_TY
            , WKT
            , UP_PERMITTED_LEFT_TURN
            , DOWN_PERMITTED_LEFT_TURN
            , UP_BUS_LANE
            , DOWN_BUS_LANE
            , RIGHT_TURN
            , RIGHT_TURN_LINK_ID
            , LEFT_TURN_UP_DOWN
            , EDIT_YN
            , ROAD_RANK
            , FACILITY_KIND
            , NAVI_LV
            , KOTI_LV
            , LEN
            , ST_DIR
            , ED_DIR
            , LINK_CATEGORY
            , ONEWAY
            , WDTH
            , LANES
            , TOLL_NAME
            , ROAD_FACILITY_NAME
            , ROAD_NO
            , HOV_BUSLANE
            , SHOV_BUSLANE
            , AUTOEXCUSIVE
            , NUM_CROSS
            , BARRIER
            , MAXSPEED
            , TL_DENSITY
            , TRAF_ID_P
            , TRAF_ID_N
        FROM NETEDIT_MS_LINK_2020_INCH
    </select>

    <select id="getLinkByZone" parameterType="HashMap" resultType="HashMap">
        SELECT
        LINK_ID
        , UP_FROM_NODE
        , UP_TO_NODE
        , UP_LANES
        , DOWN_FROM_NODE
        , DOWN_TO_NODE
        , DOWN_LANES
        , ROAD_NAME
        , EDIT_TY
        , FIRST_DO
        , FIRST_GU
        , LANE_CHANGE
        , EX_POCKET_NUM
        , WKT
        , USE_YN
        , UP_PERMITTED_LEFT_TURN
        , DOWN_PERMITTED_LEFT_TURN
        , UP_BUS_LANE
        , DOWN_BUS_LANE
        , RIGHT_TURN
        , RIGHT_TURN_LINK_ID
        , LEFT_TURN_UP_DOWN
        , EDIT_YN
        , ROAD_RANK
        , FACILITY_KIND
        , NAVI_LV
        , KOTI_LV
        , LEN
        , ST_DIR
        , ED_DIR
        , LINK_CATEGORY
        , ONEWAY
        , WDTH
        , LANES
        , TOLL_NAME
        , ROAD_FACILITY_NAME
        , ROAD_NO
        , HOV_BUSLANE
        , SHOV_BUSLANE
        , AUTOEXCUSIVE
        , NUM_CROSS
        , BARRIER
        , MAXSPEED
        , TL_DENSITY
        , TRAF_ID_P
        , TRAF_ID_N
        FROM NETEDIT_MS_LINK_2020_INCH
        WHERE 1=1
        <choose>
            <when test="SGG_CODE !=null and SGG_CODE.size != 0">
                AND FIRST_GU IN
                <foreach item="item" index="index" collection="SGG_CODE"
                         open="(" separator="," close=")">
                    #{item}
                </foreach>
            </when>
            <otherwise>
                AND ST_Intersects(
                ST_GeometryFromText(#{WKT}),
                GEOM
                )
            </otherwise>
        </choose>

    </select>

    <select id="getFacilityByZone" parameterType="HashMap" resultType="HashMap">
        SELECT
            FAC_ID
             , FAC_TY
             , WKT
             , USE_YN
             , EDIT_YN
        FROM NETEDIT_MS_FACILITY_2020
        WHERE 1=1

    </select>

    <select id="getNodeByZone" parameterType="HashMap" resultType="HashMap">
        SELECT NODE_ID, NODE_TYPE, TRAFFIC_LIGHT, NODE_NAME, DISTRICT_ID, DISTRICT_ID2, WKT, USE_YN, EDIT_YN
        FROM NETEDIT_MS_NODE_2020_INCH
        WHERE NODE_ID IN
        (
        SELECT
        UP_FROM_NODE
        FROM NETEDIT_MS_LINK_2020_INCH
        WHERE 1=1
        <choose>
            <when test="SGG_CODE !=null and SGG_CODE.size != 0">
                AND FIRST_GU IN
                <foreach item="item" index="index" collection="SGG_CODE"
                         open="(" separator="," close=")">
                    #{item}
                </foreach>
            </when>
            <otherwise>
                AND ST_Intersects(
                ST_GeometryFromText(#{WKT}),
                GEOM
                )
            </otherwise>
        </choose>

        UNION ALL

        SELECT
        UP_TO_NODE
        FROM NETEDIT_MS_LINK_2020_INCH
        WHERE 1=1
        <choose>
            <when test="SGG_CODE !=null and SGG_CODE.size != 0">
                AND FIRST_GU IN
                <foreach item="item" index="index" collection="SGG_CODE"
                         open="(" separator="," close=")">
                    #{item}
                </foreach>
            </when>
            <otherwise>
                AND ST_Intersects(
                ST_GeometryFromText(#{WKT}),
                GEOM
                )
            </otherwise>
        </choose>
        )
    </select>

    <select id="getNode" resultType="HashMap">
        SELECT 'FROM' AS DATA_TYPE, NODE_ID, NODE_TYPE, TRAFFIC_LIGHT, NODE_NAME, DISTRICT_ID, DISTRICT_ID2, WKT, USE_YN, EDIT_YN
        FROM NETEDIT_MS_NODE_2020_INCH
        WHERE NODE_ID = #{FROM_NODE}

        UNION ALL

        SELECT 'TO' AS DATA_TYPE, NODE_ID, NODE_TYPE, TRAFFIC_LIGHT, NODE_NAME, DISTRICT_ID, DISTRICT_ID2, WKT, USE_YN, EDIT_YN
        FROM NETEDIT_MS_NODE_2020_INCH
        WHERE NODE_ID = #{TO_NODE}
    </select>

    <select id="getTurn" resultType="HashMap">
        SELECT NODE_ID
            , WKT
        FROM NETEDIT_MS_TURN_2020_INCH
    </select>

    <select id="getRcline" resultType="HashMap">
        SELECT UFID, WKT
        FROM NETEDIT_MS_RCLINE_INCH
--         SELECT GID AS UFID, ST_ASTEXT(ST_TRANSFORM(ST_SETSRID(GEOM, 5179), 4326)) AS WKT
--         FROM NETEDIT_MS_RFLINE_INCH
--         WHERE GEOM IS NOT NULL
    </select>

    <select id="getSingleLink" resultType="HashMap" parameterType="HashMap">
        SELECT
            LINK_ID
            , UP_FROM_NODE
            , UP_TO_NODE
            , UP_LANES
            , DOWN_FROM_NODE
            , DOWN_TO_NODE
            , DOWN_LANES
            , ROAD_NAME
            , EDIT_TY
            , FIRST_DO
            , FIRST_GU
            , LANE_CHANGE
            , EX_POCKET_NUM
            , WKT
            , USE_YN
            , UP_PERMITTED_LEFT_TURN
            , DOWN_PERMITTED_LEFT_TURN
            , UP_BUS_LANE
            , DOWN_BUS_LANE
            , RIGHT_TURN
            , RIGHT_TURN_LINK_ID
            , LEFT_TURN_UP_DOWN
            , EDIT_YN
            , ROAD_RANK
            , FACILITY_KIND
            , NAVI_LV
            , KOTI_LV
            , LEN
            , ST_DIR
            , ED_DIR
            , LINK_CATEGORY
            , ONEWAY
            , WDTH
            , LANES
            , TOLL_NAME
            , ROAD_FACILITY_NAME
            , ROAD_NO
            , HOV_BUSLANE
            , SHOV_BUSLANE
            , AUTOEXCUSIVE
            , NUM_CROSS
            , BARRIER
            , MAXSPEED
            , TL_DENSITY
            , TRAF_ID_P
            , TRAF_ID_N
        FROM NETEDIT_MS_LINK_2020_INCH
        WHERE LINK_ID = #{FEATURE_ID}
    </select>

    <!-- 22.07.08 장혜진 : 조회기능 추가 = 노드 -->
    <select id="getSingleNode" resultType="HashMap" parameterType="HashMap">
        SELECT NODE_ID
             , ST_X(GEOM) AS ST_X
             , ST_Y(GEOM) AS ST_Y
        FROM NETEDIT_MS_NODE_2020_INCH
        WHERE NODE_ID = #{FEATURE_ID}
    </select>

    <select id="getSmInter" parameterType="HashMap" resultType="HashMap">
        SELECT COMMNT, WKT
        FROM NETEDIT_MS_SM_INTER
    </select>

    <update id="updateLinkGeometry">
        UPDATE NETEDIT_MS_LINK_2020_INCH
        SET GEOM = ST_GEOMETRYFROMTEXT(WKT)
        WHERE (ST_EQUALS(GEOM,ST_GEOMETRYFROMTEXT(WKT)) = FALSE OR GEOM IS NULL)
    </update>

    <update id="updateNodeGeometry">
        UPDATE NETEDIT_MS_NODE_2020_INCH
        SET GEOM = ST_GEOMETRYFROMTEXT(WKT)
        WHERE WKT IS NOT NULL
            AND (ST_EQUALS(GEOM,ST_GEOMETRYFROMTEXT(WKT)) = FALSE OR GEOM IS NULL)
    </update>

<!--    <update id="updateFacGeometry">-->
<!--        UPDATE NETEDIT_MS_FACILITY_2020-->
<!--        SET GEOM = ST_GEOMETRYFROMTEXT(WKT)-->
<!--        WHERE (ST_EQUALS(GEOM,ST_GEOMETRYFROMTEXT(WKT)) = FALSE OR GEOM IS NULL)-->
<!--    </update>-->

<!--    22.09.08 장혜진 : 링크 시군구 수정-->
    <update id="updateLinkSggGeometry">
        UPDATE NETEDIT_MS_LINK_2020_INCH A
        SET FIRST_DO = B.SIDO_CD
            , FIRST_GU = B.SIGUNGU_CD
        FROM (
            SELECT A.LINK_ID
                , A.FIRST_GU
                , B.SIGUNGU_CD
                , B.SIDO_CD
            FROM NETEDIT_MS_LINK_2020_INCH A
                , NETEDIT_MS_SGG_2020_LIST3 B
            WHERE (A.FIRST_GU IS NULL OR A.FIRST_GU = ''
                    OR A.FIRST_DO IS NULL OR A.FIRST_DO = '')
                AND ST_CONTAINS(B.GEOM, ST_SETSRID(ST_STARTPOINT(ST_GEOMETRYFROMTEXT(A.WKT)), 4326)) = 't' ) B
        WHERE A.LINK_ID = B.LINK_ID;
    </update>

<!--    22.09.08 장혜진 : 노드 시군구 수정-->
    <update id="updateNodeSggGeometry">
        UPDATE NETEDIT_MS_NODE_2020_INCH A
        SET DISTRICT_ID = B.SIGUNGU_CD
            , DISTRICT_ID2 = B.SIGUNGU_CD
        FROM (
            SELECT A.NODE_ID
                , A.DISTRICT_ID2
                , B.SIGUNGU_CD
            FROM NETEDIT_MS_NODE_2020_INCH A
                , NETEDIT_MS_SGG_2020_LIST3 B
            WHERE (A.DISTRICT_ID2 IS NULL OR A.DISTRICT_ID2 = '')
                AND ST_CONTAINS(B.GEOM, ST_SETSRID(ST_STARTPOINT(ST_GEOMETRYFROMTEXT(A.WKT)), 4326)) = 't' ) B
        WHERE A.NODE_ID = B.NODE_ID;
    </update>

    <!-- 22.08.29 장혜진 : wkt 미저장에 대한 처리 -->
    <update id="updateWktfGeom" parameterType="HashMap">
        UPDATE NETEDIT_MS_NODE_2020_INCH
        SET WKT = ST_ASTEXT(GEOM, 4326)
        WHERE USE_YN = 'Y'
            AND WKT IS NULL;
    </update>

    <!-- 22.09.22 장혜진 : 버텍스 삭제 -->
    <update id="removeVtx" parameterType="java.lang.String">
        UPDATE NETEDIT_MS_LINK_2020_INCH
        SET GEOM =
            ST_MAKELINE(
                    ST_STARTPOINT(GEOM)
                , ST_ENDPOINT(GEOM))
          , WKT = ST_ASTEXT(
                ST_MAKELINE(
                        ST_STARTPOINT(GEOM)
                    , ST_ENDPOINT(GEOM)))
        WHERE LINK_ID = #{LINK_ID}
    </update>

</mapper>
